Pentru rezolvarea temei am folosit urmatoarele clase/interfete:

	1. Main
	2. DrawableShape
	3. Painter
	4. Canvas
	5. Circle
	6. Diamond
	7. Line
	8. Point
	9. Polygon
	10. Rectangle
	11. Square
	12. Triangle
	13. ShapeFactory

1. Main

	Clasa Main contine o metoda numita getRGBAValue care converteste un cod RGB si o valoare alfa intr-un int ARGB si metoda main care pe baza unui scanner citeste datele din fisier, initializeaza canvas-ul, creeaza formele cu ajutorul clasei ShapeFactory si le deseneaza, apoi scrie imaginea continuta de canvas.

2. DrawableShape

	Interfata DrawableShape contine o metoda numita getDrawn folosita pentru desenerarea formelor.

3. Painter
	
	Interfata Painter contine mai multe metode supraincarcate numite draw, care pot primi ca parametru una dintre urmatoarele forme: Circle, Diamond, Line, Polygon, Rectangle, Square, Triangle. Aceste metode sunt folosite pentru desenarea formelor in canvas.

4. Canvas

	Clasa Canvas implementeaza interfata Painter si contine definitii pentru toate metodele din interfata Painter. De asemenea ea mai contine o metoda numita circleDrawHelper care este folosita de algoritmul lui Bresenham de desenare a cercurilor si o metoda numita fill care umple interiorul unei forme pe baza unei cozi de umplere pentru evitarea erorilor de tip Stack Overflow. Aceasta clasa mai contine si urmatoarele variable: o lista liniara numita fillQueue folosita drept coada pentru umplerea formelor geometrice, un buffered image numit image care contine matricea de pixeli a imaginii, un intreg numit width si un intreg numit height care reprezinta latimea si inaltimea imaginii.

5. Circle

	Clasa Circle implementeaza interfata DrawableShape si contine definitia metodei getDrawn care apeleaza functia de draw corespunzatoare unui cerc care are la baza algoritmul lui Bersenham de desenare a cercurilor. De asemenea clasa mai contine si urmatoarele variabile: o variabila de tip Point care contine coordonatele centrului cercului, un intreg ce reprezinta raza, un intreg ce reprezinta culoarea conturlui si un intreg ce reprezinta culoarea folosita la umplerea formei.

6. Diamond

	Clasa Diamond implementeaza interfata DrawableShape si contine definitia metodei getDrawn care apeleaza functia de draw corespunzatoare unui romb, care se foloseste de functia de desenare a unei linii pentru contur. De asemenea clasa mai contine si urmatoarele variabile: o variabila de tip Point care contine coordonatele centrului rombului, un intreg ce reprezinta lungimea diagonalei orizontale, un intreg ce reprezinta lungimea diagonalei verticale, un intreg ce reprezinta culoarea conturlui si un intreg ce reprezinta culoarea folosita la umplerea formei.

7. Line

	Clasa Line implementeaza interfata DrawableShape si contine definitia metodei getDrawn care apeleaza functia de draw corespunzatoare unei linii, care are la baza alogritmul lui Bersenham de desenare a liniilor. De asemenea clasa mai contine si urmatoarele variabile: un vector de doua elemente de tip Point ce contine coordonatele de incepere si de terminare a liniei si o variabila de tip intreg ce reprezinta culoarea liniei.

8. Point

	Clasa Point contine doua variabile de tip intreg ce reprezinta coordonatele carteziene ale unui punct.

9. Polygon
	
	Clasa Polygon implementeaza interfata DrawableShape si contine definitia metodei getDrawn care apeleaza functia de draw corespunzatoare unui poligon, care se foloseste de functia de desenare a unei linii pentru contur. De asemenea clasa mai contine si urmatoarele variabile: un intreg care contine numarul de varfuri ale poligonului, un vector de elemente de tip Point care contine coordonatele varfurilor, un intreg ce reprezinta culoarea conturlui si un intreg ce reprezinta culoarea folosita la umplerea formei.

10. Rectangle

	Clasa Rectangle implementeaza interfata DrawableShape si contine definitia metodei getDrawn care apeleaza functia de draw corespunzatoare unui dreptunghi, care se foloseste de functia de desenare a unei linii pentru contur. De asemenea clasa mai contine si urmatoarele variabile: o variabila de tip Point ce contine coordonatele coltului din stanga sus, un intreg ce contine latimea, un intreg ce contine inaltimea, un intreg ce reprezinta culoarea conturlui si un intreg ce reprezinta culoarea folosita la umplerea formei.

11. Square

	Clasa Square implementeaza interfata DrawableShape si contine definitia metodei getDrawn care apeleaza functia de draw corespunzatoare unui patrat, care se foloseste de functia de desenare a unei linii pentru contur. De asemenea clasa mai contine si urmatoarele variabile: o variabila de tip Point ce contine coordonatele coltului din stanga sus, un intreg ce contine lungimea laturii, un intreg ce reprezinta culoarea conturlui si un intreg ce reprezinta culoarea folosita la umplerea formei.

12. Triangle

	Clasa Triangle implementeaza interfata DrawableShape si contine definitia metodei getDrawn care apeleaza functia de draw corespunzatoare unui triunghi, care se foloseste de functia de desenare a unei linii pentru contur. De asemenea clasa mai contine si urmatoarele variabile: un vector de trei elemente de tip Point ce contine coordonatele colturilor,  un intreg ce reprezinta culoarea conturlui si un intreg ce reprezinta culoarea folosita la umplerea formei.
	
13. ShapeFactory

	Clasa ShapeFactory contine o metoda numita getInstance ce intoarce o instanta a clasei si o metoda numita getShape care instantiaza o forma pe baza numelui si a scannerului primite ca parametrii.
	
Cine crezi ca va sta pe tronul de fier dupa ce se termina Game of Thrones?

A: Jon Snow
B: Daenerys Targaryen
C: Cersei Lannister
D: Tyrion Lannister