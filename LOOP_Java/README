Pentru rezolvarea temei am folosit urmatoarele clase:
	- Main
	- Hero
	- Rogue
	- Knight
	- Wizard
	- Pyromancer

1. Clasa Main

	In interiorul functiei main se va declara un File System folosit pentru citirea si scrierea din fisiere, apoi sunt apelate functiile readMap, readCharacters, readRounds si printResults. In urma apelurilor acestor functii fisierele sunt inchise.
	Functia readMap citeste din fisierul de intrare harta si o retine intr-o matrice de NxM caractere.
	Functia readCharacters construieste in memorie un vector de tip Hero in care se vor retine eroii. In functie de tipul de erou care a fost citit se va instantia clasa respectiva (Rogue, Knight, Wizard, Pyromancer).
	Functia readRounds citeste miscarile personajelor si le muta pe harta doar daca ele inca sunt vii si nu au fost paralizate, apoi apeleaza functia checkEncounters.
	Functia checkEncounters ia fiecare erou din vector si verifica daca exista un alt erou aflat pe aceeasi pozitie pe harta. Daca exista un al doilea erou atunci apeleaza functia fight care primeste parametru cei doi erou care se vor lupta.
	Functia fight apeleaza functiile de atac are fiecarui personaj, apoi le aplica damage-ul si ii da experienta eroului castigator prin intermediul functiei addXP.
	Functia printResults scrie in fisier vectorul de eroi in formatul specificat in enunt.

2. Clasa Hero

	Constructorul clasei ii va seta atributele sale astfel:
		- maxHP este transmis ca parametru si reprezinta viata maxima a eroului
		- HP reprezinta viata curenta a eroului si este egala cu maxHP
		- XP reprezinta punctele de experienta alea eroului si este implicit 0
		- LVL reprezinta nivelul eroului si este implicit 0
		- heroClass este un caracter care specifica clasa eroului si este primita ca parametru
		- x si y reprezinta coordonatele eroului pe harta si sunt transmise ca parametri
		- damageA1Taken si damageA2Taken reprezinta damage-ul primit de erou in timpul unei lupta fara multiplicatorul de rasa
		- enemyA1RaceModifier si enemyA2RaceModifier reprezinta multiplicatorii de rasa ai inamicului in timpul luptei si este folosit pentru amplificarea damage-ului primit
		- overTimeDamage reprezinta damage-ul pe care eroul il primeste in afara luptei
		- overTimeDamageRoundsLeft reprezinta numarul de runde pentru care se va aplica overTimeDamage
		- isStunned este un boolean care ne spune daca eroul este paralizat sau nu

	Functia move va muta eroul pe harta in functie de directia pe care a primit-o ca parametru.
	Functia addXP ii va adauga eroului puncte de experienta in functie de nivelul inamicului invins conform metodei din enunt.
	Functia applyOverTimeDamage scade din viata eroului cu overTimeDamage si decrementeaza overTimeDamageRoundsLeft la fiecare apel daca overTimeDamageRoundsLeft este mai mare ca 0 si atunci cand overTimeDamageRoundsLeft este 0 se va seta isStunned ca fiind fals pentru a scapa de paralizie (daca aceasta a fost aplicata).
	Functia attack va apela functiile ability1 si ability2 pentru inamicul care este transmis ca parametru.
	Functia takeDamage va scadea din viata eroului damage-ul luat la finalul luptei.
	Functia checkLvlUp va verifica daca personajul a strans suficienta experienta pentru a creste in nivel. Ea este o functie recursiva deoarece este posibil sa se creasca cu mai mult de un nivel dintr-o singura lupta. Daca se face level-up atunci nivelul si viata maxima ale eroului cresc si viata curenta este resetata la maxHP. Aceasta functie este abstracta deoarece viata fiecarei clase creste cu un numar diferit de puncte, astfel ea trebuie suprascrisa pentru fiecare dintre clasele ce o mostenesc.
	Functiile ability1 si ability2 calculeaza damage-ul pe care il va lua inamicul transmis ca parametru. Ele sunt niste functii abstracte, fiecare clasa avand abilitati diferite. Damage-ul de baza va fi calculat in functie de nivel, apoi se va aplica multiplicatorul de teren, se va lua multiplicatorul de rasa de la raceModifierHandler si vor fi salvate. 
	Functia raceModifierHandler este o functie care intoarce multiplicatorul de rasa pentru un inamic si o abilitate specificate ca parametrii. Ea este o functie abstracta deoarece difera de la clasa la clasa.

3. Clasa Rogue -> Mosteneste clasa Hero

	Constructorul apeleaza constructorul clasei Hero cu parametrii specifici acestei clasei si coordonatele primite ca parmetrii. De asemenea seteaza backstabCount si wizardCount folosite in cadrul abilitatilor.
	Functia ability1 pe langa calcularea damage-ului si a multiplicatoarelor va verifica daca lovitura va fi una criticala prin intermediul backstabCount, iar incermentarea acestuia in cazul in care se lupta cu un Wizard se face pe baza wizardCounter (vezi Wizard.ability2).
	Functia ability2 va seta damage-ul luat de inamic si ii va aplica damage prelungit si paralizie pe un numar de runde care depinde daca se afla sau nu pe teren de tip Woods.

4. Clasa Knight -> Mosteneste clasa Hero

	Constructorul apeleaza constructorul clasei de baza cu parametrii specifici acestei clasei.
	Functia ability1 calculeaza limita de viata a inamicului si daca aceasta depaseste 40% o va trunchia, apoi verifica daca inamicul poate fi executat. Daca nu poate fi executat atunci se va calcula damage-ul in mod normal.
	Functia ability2 seteaza damage-ul luat de inamic si ii aplica paralizie.

5. Clasa Wizard -> Mosteneste clasa Hero

	Constructorul apeleaza constructorul clasei de baza cu parametrii specifici acestei clasei.
	Functia ability1 calculeaza procentul din viata inamicului care va fi absorbita.
	Functia ability2 calculeaza procentul din damage-ul luat de Wizard, iar pentru a vedea cat damage este luat de Wizard se va instantia un nou Wizard care va fi atacat de inamic, astfel se va obtine exact damage-ul pe care il va lua Wizard-ul la finalul luptei. Acest lucru produce erori atunci cand se va lupta cu un Rogue deoarece backstabCount va creste o data pentru Wizard si o data pentru instanta temporara folosita la calcularea damage-ului, astfel este necesar ca backstabCount sa se incrementeze o data la 2 lupte cu un Wizard.

6. Clasa Pyromancer -> Mosteneste clasa Hero

	Constructorul apeleaza constructorul clasei de baza cu parametrii specifici acestei clasei.
	Functia ability2 seteaza damage-ul luat de inamic si ii aplica damage prelungit.

Astea au fost toate, altele nu-s, pana data viitoare ciaoles.